s3://fs-emr-pr-raw/Symphony/Daily/20210612/ETL_DEMO.TXT
run today: This job use last 6 days file and combine : last 6  files and combine

********************************************************************;           
*                                                                  *;           
********************************************************************;           
* --- MODIFICATION LIST ---                                        *;           
* 03/18/15 CW  NEW INSTALL                                         *;           
* 09/28/16 TCS BI  FIX ISSUE WITH NOTE_DY                          *;           
********************************************************************;           
OPTIONS LS=120 mlogic mprint; 

FILENAME INCLMAC "/usr/local/SASHome/SASBI/Macros";
%INCLUDE INCLMAC(MEDATES_JAMS_D.sas);

%LET EBS_LOG=%STR(&EBS./SASBI/Logs/Daily);
%LET EBS_OUT=%STR(&EBS./SASBI/Output/Daily);

PROC PRINTTO LOG="&EBS_LOG./BCOPFRD3_&ASOFDAY..log" NEW;
RUN;

FILENAME OUT "&EBS./Output/FieldReporting/Daily/FR_LOANS_DAILY_DEMO.TXT";

DATA CURRENT_WEEK;
INPUT CURR_WEEK $;
CARDS;
RUN;

%MACRO DEMO;
%DO I=1 %TO 7;
DATA CURR_WEEK (KEEP=CURR_WEEK);
X=&TODAY.;
Y=INTNX('DAY',X,-&I.);
IF WEEKDAY(Y) NE 1 then DO;
CURR_WEEK=PUT(Y,YYMMDDN8.);
END;
RUN;
PROC APPEND BASE=CURRENT_WEEK DATA=CURR_WEEK;
RUN;
%END;

DATA CURRENT_WEEK;
SET CURRENT_WEEK (WHERE=(CURR_WEEK NE ' '));
RUN;

PROC SORT DATA=CURRENT_WEEK NODUPKEY;
BY DESCENDING CURR_WEEK;
RUN;

DATA _NULL_;
SET CURRENT_WEEK END=LAST;
COUNTER+1;
CALL SYMPUTX("HIST_DATE"||STRIP(PUT(COUNTER,BEST12.)),STRIP(CURR_WEEK));
CALL SYMPUTX("CURR_WEEKCOUNT",STRIP(PUT(COUNTER,BEST12.)));
RUN;

%DO I=1 %TO &CURR_WEEKCOUNT;
//avoid till here
line from 59 to 71 (reading all 6 files
PROC S3; 
GET "&S3_RAW./Symphony/Daily/&&HIST_DATE&I./ETL_DEMO.TXT" "&EBS./Input/Symphony/Daily/&&HIST_DATE&I./ETL_DEMO.TXT";(
RUN;

FILENAME IN "&EBS./Input/Symphony/Daily/&&HIST_DATE&I./ETL_DEMO.TXT";

/** end of Test code **/
  DATA DEMO&I.;                                                                    
    INFILE IN DLM='|~|';                                                                
                                                                                
/*     ASOF=DATE()-1;*/
ASOF=input(put(&&HIST_DATE&I.,8.),YYMMDD8.); 

informat loandate yymmdd8. riskrank $20. auto_ind $1. office1 $6. office2 $6. COBR_IND $1. RBO 1. LTV 5.2  app_State $2. app_branch $4. SRCEXP $2.;
input  
application_id// column names start from here
office1
acctn
loandate
actionuniqueid
transaction_code
action_score_table
score_table
appstatus
ATP
score_sub_total
score_total
SRCEXP
housing_status
num_dependents
loan_purpose
job_category
open
remaininc
deltsince
Test
testcode_2
reason_no_agent_is_involved
prior_agent_id
ssc_owned_by_id
cb_name
rvp_id
permanent_identifier
app_bkscore
pwp_sold_ind
private_label_agent_number
language_preference
cb_num_majorderog
cb_num_minderog
cb_num_satisfactory
agent_number
first_5_last_name
market_code
app_date
property_class
hmda_occupancy_status
re_appraised_value
curr_mtg_amt
cb_mtgtype
prop_diff_state
call_prov
yrs_call_prov
prepaypen
pfs_application_signing_date
store_number
salesman_number
prioracct
sf_plancode
employee_compnay
payroll_deduction
employee_app_or_coapp
payroll_deduction_date
coborrower_ssno
coborrower_fname
coborrower_lname
COBR_IND
co_app_res_addr1
co_app_res_city
co_app_res_state
co_app_res_zipcode
referral_company
appv_rej_by
credit_decision_ind
approved_rejected_date
appno
approved_amt
hmda_ind
hmda_purpose
hmda_race
hmda_gender
hmda_coapp_race
hmda_coapp_gender
res_addr1
res_city
res_state
res_zipcode
hmda_1stmtg_payoff
pfs_second_agent_id
pfs_second_agent_last_name
app_state
app_branch
scheduled_closing_date
prepayment_penalty_appl_flag
high_mtg_ind
closing_state
closing_branch
designated_office_future_ind
designated_office_state_branch
borrower_home_phone
step2rate
step2pay
AUTO_IND
autovalue
app_pers_highcredit
app_re_highcredit
app_decision
total_otherinc
elig_eq_wrap
RISKRANK
hmda_how_taken_app
original_score
original_worksheet
hmda_po_fmtg
app_risk_grade
broker_premium_not_in_network
broker_premium_recaputure_ind
LTV
contract_state
app_timeaddr
app_timejob
FICO
cb_bankrupt
cb_foreclose
app_state2
app_branch2
RBO
money_back_mortgage_program_ind
preferred_product_ind
credit_bureau_id_2
credit_bureau_id_3
cost_of_borrowing
live_ck_draft_number
live_ck_indicator
clu_originated
new_mtg_lien_filing
real_estate_scorecard
real_estate_custom_score
sales_finance_scorecard
sales_finance_custom_score
pers_scorecard
custom_score
high_cost_loan_indicator
exception_rate_reason
signed_solicit_consent_form
affiliate_payoff_amount
pfs_combination_loan_ind
app_taken_by
booked_by_soeid
new_money
netpayoff_amt
e_mail
cell_phone
email_send_indicator
appraisal_order_number
appraisal_type
title_order_number
title_service_req
credit_card_offer_indicator
referral_up_eligibility_ind
borrower_solicitation_dnx
bank_draft_indicator
pwa_sold_indicator
gross_monthly_income
blank
hmda_ethnicity_app
hmda_ethnicity_coapp
hmda_homimp
hmda_applicant_race2
hmda_applicant_race3
hmda_applicant_race4
hmda_applicant_race5
hmda_co_applicant_race2
hmda_co_applicant_race3
hmda_co_applicant_race4
hmda_co_applicant_race5
low_cost_indicator
HOMECODE
hoc_exception_reason_code
marital_status_app
marital_status_coapp
underserved_market_indicator
requested_amt
iui_eligibility_code
coapp_language_preference
workstation_id
credit_card_offer_ind2
filler
;
length office office2 $6.;
/*office=app_State||app_branch;*/
office2=app_State||app_branch; //add office column

    IF app_State > 0 THEN                                                            
        OFFICE = OFFICE2;                                                       
    ELSE                                                                        
        OFFICE = OFFICE1; //office 1 existing column   
 
     IF ACCTN > 0;                                                                                 
    *DOL = DOL + 20000000;                                                      
    NOTE_DY  = loandate;                                  
                                                                                
                                                                                
    IF AUTO_IND NE 'Y'  THEN                                                    
      AUTO_IND='N';                                                             
                                                                                
    IF COBR_IND = 'Y'  THEN                                                     
      COBORROWER=1;                                                             
    ELSE                                                                        
      COBORROWER=0;                                                             
                                                                                
    IF RBO NE 1 THEN                                                            
      RBO=0;                                                                    
                                                                                
    IF FICO=. THEN  (nulll or blank check)                                                            
      FICO=0;                                                                   
                                                                                
    IF LTV=. THEN                                                               
      LTV=0;                                                                    
                                                                                
    IF ATP=. THEN                                                               
      ATP=0;                                                                    
                                                                                
    *** RISK RANK ***;                                                          
    IF RISKRANK NOT IN('EXCELLENT','GOOD','AVERAGE','WEAK','FAIL')              
      THEN RISKRANK = 'UNKNOWN';                                                
                                                                                
    *** NUMERIC RISK RANK ***;                                                  
         IF RISKRANK='EXCELLENT' THEN RISKCODE=5;                               
    ELSE IF RISKRANK='GOOD'      THEN RISKCODE=4;                               
    ELSE IF RISKRANK='AVERAGE'   THEN RISKCODE=3;                               
    ELSE IF RISKRANK='WEAK'      THEN RISKCODE=2;                               
    ELSE IF RISKRANK='FAIL'      THEN RISKCODE=1;                               
    ELSE                              RISKCODE=0;                               
                                                                                
    *** HOMEOWNER ***;                                                          
    IF (NOTE_DY >= '01AUG04'D AND                                               
        HOMECODE IN ('02','03','06','08','10','11','12','13','14','15'))        
      OR                                                                        
       (NOTE_DY >= '01JUN00'D AND HOMECODE IN ('2','3','6','8'))                
      OR                                                                        
       (NOTE_DY <  '01JUN00'D AND HOMECODE IN ('2','3','6','7','8'))            
    THEN                                                                        
       HOMEOWNER = 1;                                                           
    ELSE                                                                        
       HOMEOWNER = 0;                                                           
                         
keep office office1 office2 asof acctn note_Dy ltv atp homecode homeowner riskrank riskcode fico
srcexp coborrower auto_ind COBR_IND RBO;//just select these columns form input dta set
RUN;

PROC APPEND BASE=DEMO DATA=DEMO&I. FORCE;// combining last 6 files
RUN;
//ignore from 322 to 338
PROC DATASETS; 
DELETE DEMO&I.;
RUN; 

DATA _NULL_;
X "rm &EBS./Input/Symphony/Daily/&&HIST_DATE&I./ETL_DEMO.TXT";
call system ('rc=$?');
call system ('echo $?');
call system( 'echo rc');
%put 'warning:' &sysrc;
RUN;

%END;
%MEND;

%DEMO;
    //ignore till here                                                                            
PROC SORT DATA=DEMO; //sort data on office and acctn                                                            
  BY OFFICE ACCTN;                                             
RUN;                                                                            
                                                                                
                                                                                
*PROC PRINT;                                                                    
* VAR OFFICE ACCTN XFO XFA AO ASOF NOTE_DY FICO LTV AUTO_IND HOMEOWNER;         
*  FORMAT ASOF NOTE_DY YYMMDD10.;                                               
*RUN;                                                                           
                                                                                
DATA _NULL_;                                                                    
  SET DEMO;                                                                     
                                                                                
  BY OFFICE ACCTN;                                                              
  IF FIRST.ACCTN; /// sort on acctn only keep fisr acctn //dedup accctn  // keep acctn from latest file                                                              
                                                                                
                                                                                
  FY = YEAR(NOTE_DY); //new column                                                          
  AP = MONTH(NOTE_DY);     //new column                                                     
                                                                                
                                                                                
  FILE OUT;                                                                     
                                                                                
  RETAIN HEADER;  //avoid (create the header as well with below columns)                                                             
                                                                                
  RISKRANK_LEN = LENGTH(TRIM(RISKRANK)); //avoid                                       
                                                                                
  IF HEADER NE 'Y' THEN DO;    //avoid                                                 
                                                                                
    PUT 'FISCAL_YEAR'          '          ' //output column names                                          
        'ACCOUNTING_PERIOD'    '   '   
        'BRANCH'               '  '   
        'ACCOUNT'              ' '   
        'ASOF'                 '      '   
        'HOMEOWNER'            '          '   
        'NOTE_DT'              ' '   
        'FICO_ORIGINAL'        '            '   
        'LTV_ORIGINAL'         '             '   
        'RISK_RANK_ORIGINAL'   '    '   
        'RISK_CODE_ORIGINAL'   '    '   
        'ABILITY_TO_PAY_ORIGINAL'  '           '
        'RBO'                  '       '   
        'AUTO_IND'             '                '   
        'SOURCE_EXPANDED'      '     '   
    ;                                                                           
                                                                                
     HEADER='Y';  //avoid                                                              
                                                                                
  END;                                                                          
     //avoid                                                                            
  PUT     FY               Z4. '   '  
          AP               Z2. '       '  
          OFFICE           6.  '    '  
          ACCTN            Z7. '  '  
          ASOF             MMDDYY10.   '              'mm/dd/yyyy' needed this format
          HOMEOWNER        Z1. '       '  
          NOTE_DY          MMDDYY10.   '         '  
          FICO             3.  '      '  
          LTV              3.  '       '  
          RISKRANK         $VARYING10. RISKRANK_LEN '           '
          RISKCODE         1.  '                '  
          ATP              2.  '       '  
          RBO              1.  '      '  
          AUTO_IND         $1. '             '  
          SRCEXP           $2. ' '  
                                                                                
     ;                                                                          
RUN;                                                                            
                                                                                
PROC DATASETS;
DELETE CURR_WEEK CURRENT_WEEK DEMO;
RUN;

DATA _NULL_;
X "cp &EBS./Output/FieldReporting/Daily/FR_LOANS_DAILY_DEMO.TXT /mnt/mft-sas/Outbound/FieldReporting/Risk/FR_LOANS_DAILY_DEMO.TXT";
X "chmod 777 /mnt/mft-sas/Outbound/FieldReporting/Risk/FR_LOANS_DAILY_DEMO.TXT";
call system ('rc=$?');
call system ('echo $?');
call system( 'echo rc');
%put 'warning:' &sysrc;
RUN;
